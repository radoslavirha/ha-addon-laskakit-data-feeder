module.exports = {
  env: {
    node: true,
    es6: true
  },
  parserOptions: {
    ecmaVersion: '2021',
    sourceType: 'module',
    tsconfigRootDir: __dirname,
    project: 'tsconfig.eslint.json'
  },
  ignorePatterns: [ 'dist' ],
  plugins: [ '@typescript-eslint', 'simple-import-sort' ],
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/eslint-recommended',
    'plugin:@typescript-eslint/recommended'
  ],
  parser: '@typescript-eslint/parser',
  rules: {
    'array-bracket-spacing': [ 'error', 'always' ],
    'arrow-body-style': [ 'error', 'as-needed', { requireReturnForObjectLiteral: false } ],
    'arrow-parens': [ 'error', 'as-needed' ],
    'arrow-spacing': 'error',
    'block-scoped-var': 'error',
    'brace-style': [ 'error', '1tbs', { allowSingleLine: true } ],
    camelcase: [ 'error', { properties: 'never' } ],
    'comma-dangle': [ 'error', 'never' ],
    'comma-spacing': [ 'error', { after: true } ],
    'comma-style': [ 'error', 'last' ],
    complexity: 'warn',
    curly: [ 'error' ],
    'dot-notation': 'error',
    eqeqeq: [ 'error', 'always' ],
    'guard-for-in': 'error',
    indent: [ 'error', 2, { ignoredNodes: [ 'TemplateLiteral *' ] } ],
    'keyword-spacing': 'error',
    'max-depth': [ 'warn', { max: 4 } ],
    'no-await-in-loop': 'off',
    'no-buffer-constructor': 'error',
    'no-cond-assign': 'off',
    'no-console': process.env.NODE_ENV === 'production' ? [ 'error', { allow: [ 'error', 'info', 'warn' ] } ] : 'off',
    'no-dupe-else-if': 'error',
    'no-empty': [ 'error', { allowEmptyCatch: true } ],
    'no-lonely-if': 'error',
    'no-misleading-character-class': 'error',
    'no-multi-spaces': 'error',
    'no-multi-str': 'error',
    'no-multiple-empty-lines': 'error',
    'no-nested-ternary': 'error',
    'no-prototype-builtins': 'off',
    'no-tabs': 'error',
    'no-template-curly-in-string': 'error',
    'no-trailing-spaces': 'error',
    'no-underscore-dangle': 'off',
    'no-use-before-define': 'error',
    'no-useless-call': 'error',
    'no-useless-concat': 'error',
    'no-useless-return': 'error',
    'no-var': [ 'error' ],
    'object-curly-spacing': [ 'error', 'always' ],
    'object-shorthand': [ 'error', 'always' ],
    'one-var-declaration-per-line': [ 'error', 'initializations' ],
    'operator-linebreak': [ 'error', 'after' ],
    'padded-blocks': 'off',
    'prefer-arrow-callback': 'error',
    'prefer-template': 'warn',
    'quote-props': [ 'error', 'as-needed' ],
    quotes: [ 'error', 'single', { allowTemplateLiterals: true } ],
    semi: 'off',
    'simple-import-sort/imports': 'error',
    'simple-import-sort/exports': 'error',
    'space-before-blocks': [ 'error', 'always' ],
    'space-in-parens': [ 'error', 'never' ],
    'space-infix-ops': 'error',
    'space-unary-ops': [ 'error', { words: false, nonwords: false, overrides: { await: true } } ],
    'template-curly-spacing': [ 'warn', 'never' ],
    'wrap-iife': 'error',
    '@typescript-eslint/no-explicit-any': 'error',
    '@typescript-eslint/explicit-function-return-type': 'error',
    '@typescript-eslint/no-empty-interface': 'off',
    '@typescript-eslint/semi': [ 'error' ],
    '@typescript-eslint/member-delimiter-style': 'error'
  }
};
